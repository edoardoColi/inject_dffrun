# To compile we use the Makefiles as described
# For the folders inside tests/distributed copy the Makefile inside the folders and compile like the rest of the tests
# (CXX=g++-10 make DEBUG=1 EXCLUDE_MPI=1 dwordcountb) <- /dwordcount

### This part can also be run from the script
 cd .../fastflow/tests/distributed/
 CXX=g++-10 make
 # Alternatively we can directly add CXX=g++-10 to the Makefile
 # (generates tests executables)
###

# To run an executable we use dff_run together with the compiled program that uses fastflow and the related json file
# -V = Verbose
# -f = path for json file
 .../dff_run -V -f .../config_of_application.json .../application

# For example from the fastflow/tests/distributed folder we launch the executables (after creating it with make)
 ../../ff/distributed/loader/dff_run -V -f ./test_group<?>.json ./test_group<?>
# For example from the fastflow/tests/distributed/dwordcount folder we launch the executable that analyzes a specific file (after creating it with make)
 ../../../ff/distributed/loader/dff_run -V -f ./dwordcount.json ./dwordcountb -f ./testo.txt -p 1,1 -t 1 -b 10
# In the .json file, relating to the executable, we find the setting parameters for dff_run

# If we want to check the executables step-by-step we can use gdb with this command
 gdb --args .../dff_run -V -f .../config_of_application.json .../application

### '...' notation representing a generic path
